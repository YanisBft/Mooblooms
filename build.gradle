plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
	id 'me.modmuss50.mod-publish-plugin' version '0.3.5'
}

repositories {
	maven { url "https://jitpack.io" }
	maven { url "https://maven.shedaniel.me" }
	maven { url "https://maven.terraformersmc.com" }
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config}"
	include "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config}"

	modImplementation "com.terraformersmc:modmenu:${project.mod_menu}"
}

def dataOutput = "src/main/generated"

loom {
	runs {
		datagen {
			server()

			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.modid=${archivesBaseName}"
			vmArg "-Dfabric-api.datagen.output-dir=${file(dataOutput)}"

			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += dataOutput
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

publishMods {
	file = remapJar.archiveFile
	changelog = file("CHANGELOG.md").text
	type = STABLE
	modLoaders.add("fabric")

	curseforge {
		accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
		projectId = "333946"
		displayName = "[${minecraft_version}] Mooblooms - ${mod_version}"
		minecraftVersions.add("${minecraft_version}")
		minecraftVersions.add("1.20")
		requires {
			slug = "fabric-api"
		}
	}

	modrinth {
		accessToken = providers.environmentVariable("MODRINTH_TOKEN")
		projectId = "OatOIyrk"
		displayName = "[${minecraft_version}] Mooblooms - ${mod_version}"
		minecraftVersions.add("${minecraft_version}")
		minecraftVersions.add("1.20")
		requires {
			slug = "fabric-api"
		}
	}
}
